// 소수 판별  :: O(N^1/2) 

import math

def is_prime_number(x):
    # 2부터 x의 제곱근까지의 모든 수를 확인하며
    for i in range(2, int(math.sqrt(x)) + 1):
        if x % i == 0:
            return False # 나누어 떨어지면 소수가 아님
    return True

print(is_prime_number(4)) # 4는 소수가 아님
print(is_prime_number(7)) # 7은 소수임



// 다수의 소수 판별 (에라토스테네스의 체)  :: O(NloglogN)    ( 메모리공간 측면에서는 비효율적임 ) 

import math

n = 1000 
array = [True for i in range(n + 1)] # 처음엔 모든 수가 소수(True)인 것으로 초기화

for i in range(2, int(math.sqrt(n)) + 1): 
    if array[i] == True: # i가 소수인 경우 (남은 수인 경우)
 
        j = 2 
        while i * j <= n:
            array[i * j] = False # 배수들 자우기
            j += 1 

for i in range(2, n + 1):
    if array[i]:
        print(i, end=' ')
 
