N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]
visit = [([0] * M) for _ in range(N)]
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]
answer = 0
max_val = max(map(max, arr)) #2차원 배열에서 젤 큰 값 

def dfs(x, y, cnt, total):
    global answer
    
    #조기 종료
    if answer >= total + max_val * (4 - cnt):
        return
    #최대값 저장
    if cnt == 4:
        answer = max(answer, total)
        return
    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]
        if 0 <= nx < N and 0 <= ny < M and visit[nx][ny] == 0:
            # ㅗ모양 일 때
            if cnt == 2:
                visit[nx][ny] = 1
                dfs(x, y, cnt + 1, total + arr[nx][ny])
                visit[nx][ny] = 0
            visit[nx][ny] = 1
            dfs(nx, ny, cnt + 1, total + arr[nx][ny])
            visit[nx][ny] = 0

for x in range(N):
    for y in range(M):
        visit[x][y] = 1
        dfs(x, y, 1, arr[x][y])
        visit[x][y] = 0

print(answer)
