# 모래 계산하는 함수
def recount(cnt, dx, dy, d):
    global answer, sx, sy

    # y좌표 계산 & x좌표 갱신
    for _ in range(cnt):
        sx += dx
        sy += dy
        if sy<0:
            return
        # 3. a, out_sand
        total = 0  # a 구하기 위한 변수
        for dx, dy, k in d:
            nx = sx + dx
            ny = sy + dy
            if k == 0:  # a(나머지)
                temp = graph[sx][sy] - total
            else:  # 비율
                temp = int(graph[sx][sy] * k)
                total += temp

            if 0 <= nx < n and 0 <= ny < n:   # 인덱스 범위이면 값 갱신
                graph[nx][ny] += temp
            else:  # 범위 밖이면 ans 카운트
                answer += temp


n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

# 2. 방향별 모래 비율 위치
left = [(1, 1, 0.01), (-1, 1, 0.01), (1, 0, 0.07), (-1, 0, 0.07), (1, -1, 0.1),
         (-1, -1, 0.1), (2, 0, 0.02), (-2, 0, 0.02), (0, -2, 0.05), (0, -1, 0)]
right = [(x, -y, z) for x, y, z in left]
down = [(-y, x, z) for x, y, z in left]
up = [(y, x, z) for x, y, z in left]

sx, sy = n // 2, n // 2  # 시작좌표(x좌표)
answer = 0  # out_sand

# 1.토네이도 회전 방향(y위치)
for i in range(1, n + 1):
    if i % 2:
        recount(i, 0, -1, left)
        recount(i, 1, 0, down)
    else:
        recount(i, 0, 1, right)
        recount(i, -1, 0, up)

print(answer)
