from collections import deque

n,l,r=map(int,input().split())

graph=[list(map(int,input().split())) for _ in range(n)]

dx=[-1,1,0,0]
dy=[0,0,1,-1]


def bfs(x,y,num):
    arr=[] #연합 나라들 
    arr.append((x,y))
    q=deque()
    q.append((x,y)) #탐색할 나라들
    union[x][y]=num
    sum=graph[x][y]
    count=1
    
    while q:
        x,y=q.popleft()
        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]
            if 0<=nx<n and 0<=ny<n and union[nx][ny]==-1:
                if l<=abs(graph[x][y]-graph[nx][ny])<=r:
                    q.append((nx,ny))
                    sum+=graph[nx][ny]
                    count+=1
                    union[nx][ny]=num
                    arr.append((nx,ny))
    
    for i,j in arr:
        graph[i][j]=sum//count
  
    
time=0

while True:
    union=[[-1]*n for _ in range(n)]
    num=0
    for i in range(n):
        for j in range(n):
            if union[i][j]==-1:
                bfs(i,j,num)
                num+=1
    if num==n*n:
        break
    time+=1
    
print(time)
