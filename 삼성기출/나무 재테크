"""
1. 모든 칸에 5씩 양분
2. m개의 나무 심기(한칸에 여러개 가능)
3. 봄: 자신의 나이만큼 양분먹고 나이 +1 (어린나이부터)
+) 자기 나이만큼 양분 못먹으면 나무 죽음->나이 // 2 만큼 양분으로 변함
4. 나이가 5의배수면 인접한 8칸에 나이1 나무 생김 (범위내)
5. 양분추가 (입력값)
결과 : k년후 살아있는 나무의 개수
"""

n,m,k=map(int,input().split())
graph=[[5]*n for _ in range(n)]
add=[list(map(int,input().split())) for _ in range(n)]
tree=[[[] for _ in range(n)] for _ in range(n)]

dx=[0,-1,-1,-1,0,1,1,1]
dy=[-1,-1,0,1,1,1,0,-1]

for _ in range(m):
    x,y,z=map(int,input().split())
    tree[x-1][y-1].append(z)

def fall(x,y):
    global tree
    for i in range(8):  
        nx=x+dx[i]
        ny=y+dy[i]
        if 0<=nx<n and 0<=ny<n:
            tree[nx][ny].append(1)

def winter():
    global graph
    for i in range(n):
        for j in range(n):
            graph[i][j]+=add[i][j]

for _ in range(k):
    #봄 - 1단계
    for i in range(n):
        for j in range(n):
            if tree[i][j]: #나무가 있으면
                tree[i][j].sort() #어린 나이부터 양분 먹기위해
                temp=0
                index=0
                for d in range(len(tree[i][j])):
                    if graph[i][j]>=tree[i][j][d]:
                        graph[i][j] -= tree[i][j][d]
                        tree[i][j][d] += 1
                        index=d+1
                    # 여름 - 2단계
                    else:
                        temp += tree[i][j][d]//2

                graph[i][j] += temp  # 양분 먹기
                tree[i][j] = tree[i][j][:index]

    #가을 - 3단계
    for i in range(n):
        for j in range(n):
            if tree[i][j]:
                for d in tree[i][j]:
                    if d%5==0:
                        fall(i,j)

    winter()

answer=0
for i in range(n):
    for j in range(n):
        if tree[i][j]:
            answer+=len(tree[i][j])
print(answer)
