n,l=map(int,input().split())
graph=[list(map(int,input().split())) for _ in range(n)]
result = 0

def road(now):
    for j in range(1, n):
        if abs(now[j] - now[j - 1]) > 1:   # 1. 차이가 1만 가능
            return 0
        if now[j]==now[j - 1]:
            continue
        if now[j] < now[j - 1]:            # 2.  현재 < 이전
            for k in range(l):  # l 만큼 경사로 너비 필요 
                if j + k >= n or used[j + k] or now[j] != now[j + k]: # 범위 넘어감 or 이미 설치함 or 낮은 곳의 높이가 다른 경우
                    return 0
                if now[j] == now[j + k]:   # 높이가 같은 경우 사용 여부 체크 
                    used[j + k] = 1
        elif now[j] > now[j - 1]:         # 3.  현재 > 이전
            for k in range(l):
                if j - k - 1 < 0 or used[j - k - 1] or now[j - 1] != now[j - k - 1]:
                    return 0
                if now[j - 1] == now[j - k - 1]:   # 높이가 같은 경우 사용 여부 체크 
                     used[j - k - 1] = 1
    return 1   # 모두 문제없이 설치된 경우 가능함을 출력 
  
# 가로 확인
for i in range(n):
    used = [0]*n # 사용 여부
    if road(graph[i]):  # 현재 확인할 길을 넣어준다.
        result += 1

# 세로 확인
for i in range(n):
    used = [0]*n
    temp=[]
    for j in range(n):
        temp.append(graph[j][i])
    if road(temp): # 현재 확인할 길을 넣어준다.
        result += 1

print(result)  
