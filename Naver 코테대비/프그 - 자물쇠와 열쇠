def solution(key, lock):
    global M,N,board
    M, N = len(key), len(lock)

    board = [[0] * (M*2 + N) for _ in range(M*2 + N)]
    
    # 자물쇠 중앙 배치
    for i in range(N):
        for j in range(N):
            board[M+i][M+j] = lock[i][j]

    # 회전 4번
    for _ in range(4):
        key = rotate(key)
        for x in range(1, M+N):
            for y in range(1, M+N):
                attach(x, y, key)
                if check():
                    return True
                detach(x, y, key)
                
    return False

# 시계방향 회전 
def rotate(a):
    a = list(zip(*a[::-1]))
    a = [list(s) for s in a]
    return a

# 열쇠 넣기 (1칸씩)
def attach(x, y, key):
    for i in range(M):
        for j in range(M):
            board[x+i][y+j] += key[i][j]
            
# 체크 
def check():
    for i in range(N):
        for j in range(N):
            if board[M+i][M+j] != 1:
                return False
    return True

# 열쇠 빼기 
def detach(x, y, key):
    for i in range(M):
        for j in range(M):
            board[x+i][y+j] -= key[i][j]
            
