from collections import deque
dx=[1,-1,0,0]
dy=[0,0,1,-1]

def solution(maps):
    n=len(maps) #행 
    m=len(maps[0]) #열
    
    visit=[[0]*m for _ in range(n)]
    visit[0][0]=1
    q=deque()
    q.append((0,0))
    
    while q:
        x,y=q.popleft()
        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]
            if 0<=nx<n and 0<=ny<m and maps[nx][ny]==1:
                maps[x][y]=0
                if visit[nx][ny]<visit[x][y]:
                    visit[nx][ny]=visit[x][y]+1
                    q.append((nx,ny))
                    
    if visit[n-1][m-1]==0:
        return -1
    return visit[n-1][m-1]
    

// 다른 풀이 

from collections import deque
dx=[1,-1,0,0]
dy=[0,0,1,-1]

def solution(maps):
    n=len(maps) #행 
    m=len(maps[0]) #열
    
    visit=[[-1]*m for _ in range(n)]
    visit[0][0]=1
    q=deque()
    q.append((0,0))
    
    while q:
        x,y=q.popleft()
        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]
            if 0<=nx<n and 0<=ny<m and maps[nx][ny]==1:
                if visit[nx][ny]==-1:
                    visit[nx][ny]=visit[x][y]+1
                    q.append((nx,ny))
                     
    return visit[-1][-1]
