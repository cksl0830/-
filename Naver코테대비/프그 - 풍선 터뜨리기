# 한지점을 기준으로 어느 한쪽 방향이라도 자기보다 큰 수가 존재하면 최후 남기 가능(한 방향이라도 자기가 제일 작으면 됨)
# -> 즉 양방향의 최소값이 둘다 기준보다 작으면 불가능!!
def solution(a):
    n=len(a)
    if n in [1,2]:
        return n
    
    answer=2    # 양쪽 끝은 다 가능
    left=[a[0]]
    right=[a[-1]]
    
    for i in range(1,n):
        
        if left[-1]>a[i]:
            left.append(a[i])
        else:
            left.append(left[-1])
            
        if right[-1]>a[n-1-i]:
            right.append(a[n-1-i])
        else:
            right.append(right[-1])
    
    right.reverse()
    
    for i in range(1,n-1):
        if a[i] > left[i-1] and a[i] > right[i+1]:
            continue
        answer+=1
            
    return answer
    
    
// 다른 풀이

def solution(a):
    
    INF=1e9
    n=len(a)
    if n in [1,2]:
        return n
    
    answer = [0]*n 
    minFront, minRear = INF, INF
    for i in range(n):
        if a[i] < minFront: #왼쪽방향과 비교
            minFront = a[i]
            answer[i] = 1
        if a[-1-i] < minRear: #오른방향과 비교
            minRear = a[-1-i]
            answer[-1-i] = 1
    return sum(answer)

