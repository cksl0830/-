from collections import deque
from itertools import count

n=int(input())
graph=[]

for _ in range(n):
    graph.append(list(map(int,input())))
  

def bfs(x,y):
    
    dx=[-1,1,0,0] #좌, 우
    dy=[0,0,1,-1] #상, 하
    
    q=deque()
    q.append((x,y))
    count=1    # 번호 숫자 세기
    graph[x][y]=0  #방문해서 0으로 바꾸기
    
    while q:
        x,y=q.popleft()

        for i in range(4):  
            nx=x+dx[i]
            ny=y+dy[i]
        
            if nx<0 or nx>=n or ny<0 or ny>=n:  #좌표이동시 범위 벗어나면
                continue
            if graph[nx][ny]==0: #0이면 벽이므로
                continue
            if graph[nx][ny]==1:
                graph[nx][ny]=0   #방문시 0으로 바꾸기
                count+=1    #방문 횟수 추가
                q.append((nx,ny))
            
    return count

answer=[]   #정답 담을 변수 
for i in range(n):   #그래프에 1이 있을때마다 그부분 q에 집어넣기 
    for j in range(n):
        if graph[i][j]==1:
            answer.append(bfs(i,j))

answer.sort()
print(len(answer))
for i in answer:
    print(i)

            
