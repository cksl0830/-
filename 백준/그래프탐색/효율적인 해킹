import sys
input=sys.stdin.readline
from collections import deque

n,m=map(int,input().split())
graph=[ [] for _ in range(n+1)] #방문한 노드만 그래프 생성

for _ in range(m):
    a,b=map(int,input().split())
    graph[b].append(a)
 
def bfs(s):
    visited = [0] * (n + 1)
    count = 0 
    q = deque()
    q.append(s)
    visited[s] = 1
    while q:
        temp = q.popleft()
        count += 1   # 방문한 정점
        for i in graph[temp]:
            if visited[i]==0:
                visited[i] = 1
                q.append(i)
    return count # 방문한 정점의 수 리턴

max=0
result=[]

for i in range(1,n+1):
    if graph[i]:
        tmp=bfs(i)
        if max<tmp:   # 더크면 리스트 초기화 하고 담기 
            result=[]
            result.append(i)
            max=tmp
        elif max==tmp:  # 같으면 그대로 담기 
            result.append(i)


for n in result:
    print(n,end=' ')
