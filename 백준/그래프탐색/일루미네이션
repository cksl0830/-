from collections import deque

w, h = map(int, input().split())
graph = [[0 for _ in range(w+2)] for _ in range(h+2)] # +2씩 해준다. 외밖과 닿는 면을 다 둘러줘야해서
data=[list(map(int,input().split())) for _ in range(h)]
for y in range(h):
    for x in range(w):
        graph[y+1][x+1]=data[y][x]


# 오른쪽/오른쪽아래/왼쪽아래/왼쪽/왼쪽위/오른쪽위 (시계방향)
dy = [0, 1, 1, 0, -1, -1]   
dx = [[1, 0, -1, -1, -1, 0], [1, 1, 0, -1, 0, 1]] # 짝수줄, 홀수줄 범위내 이동거리 설정

def bfs(y, x):
    q = deque()
    q.append((y, x))
    visited = [[0 for _ in range(w+2)] for _ in range(h+2)] # 방문체크 배열 
    visited[y][x] = 1
    count = 0
    
    while q:
        y, x = q.popleft()

        for i in range(6):
            ny = y + dy[i]
            nx = x + dx[y % 2][i]
            if 0 <= ny < h+2 and 0 <= nx < w+2:
                if graph[ny][nx] == 0 and visited[ny][nx]==0:
                    q.append((ny, nx))
                    visited[ny][nx] = 1
                elif graph[ny][nx] == 1:
                    count += 1
    return count

print(bfs(0, 0))
