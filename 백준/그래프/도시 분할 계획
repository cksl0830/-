def find(parent,x):
    if parent[x]!=x:
        parent[x]=find(parent,parent[x])
    return parent[x]

def union(parent,a,b):
    a=find(parent,a)
    b=find(parent,b)
    
    if a<b:
        parent[b]=a
    else:
        parent[a]=b
        
        
N, M = map(int, input().split()) 
edges = [] 
result = 0 
parent = [i for i in range(N+1)]

for _ in range(M): 
    x, y, z = map(int,input().split()) 
    edges.append((z,x,y))

edges.sort() 
result = 0

for z,x,y in edges: 
    
    if find(parent,x) != find(parent,y): 
        union(parent,x,y) 
        result+=z
        cost=z 
        
print(result-cost)
